{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button } from \"react-native-elements\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/native';\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport checkDHall from \"./commands/checkDHall\";\nimport checkGQ from \"./commands/checkGQ\";\nimport checkLSC from \"./commands/checkLSC\";\nimport checkHealthCenter from \"./commands/checkHealthCenter\";\nimport checkBusOff from \"./commands/checkBusOff\";\nimport checkMailroom from \"./commands/checkMailroom\";\nimport styles from \"./styles/Component.style.js\";\nimport moment from 'moment';\nvar date = moment().utcOffset('-05:00').format('YYYY-MM-DD');\nvar hour = new Date().getHours();\nvar min = new Date().getMinutes();\nvar both = hour + min / 100;\nvar date2 = moment().day();\n\nfunction Food() {\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.realTitle\n  }, \"MuhlenTime\"), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Text, null, \"Today's date: \", date), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    style: styles.button,\n    buttonStyle: {\n      backgroundColor: checkDHall(date2, both)[0]\n    },\n    title: \"Dining Hall\",\n    onPress: function onPress() {\n      return alert(checkDHall(date2, both)[1]);\n    }\n  }), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    style: styles.button,\n    buttonStyle: {\n      backgroundColor: checkGQ(date2, both)[0]\n    },\n    title: \"GQ\",\n    onPress: function onPress() {\n      return alert(checkGQ(date2, both)[1]);\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\n\nfunction Health() {\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.realTitle\n  }, \"MuhlenTime\"), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Text, null, \"Today's date: \", date), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    style: styles.button,\n    buttonStyle: {\n      backgroundColor: checkHealthCenter(date2, both)[0]\n    },\n    title: \"Health Center\",\n    onPress: function onPress() {\n      return alert(checkHealthCenter(date2, both)[1]);\n    }\n  }), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    style: styles.button,\n    buttonStyle: {\n      backgroundColor: checkLSC(date2, both)[0]\n    },\n    title: \"LSC\",\n    onPress: function onPress() {\n      return alert(checkLSC(date2, both)[1]);\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\n\nfunction Student() {\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.realTitle\n  }, \"MuhlenTime\"), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Text, null, \"Today's date: \", date), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    style: styles.button,\n    buttonStyle: {\n      backgroundColor: checkBusOff(date2, both)[0]\n    },\n    title: \"Business Office\",\n    onPress: function onPress() {\n      return alert(checkBusOff(date2, both)[1]);\n    }\n  }), React.createElement(View, {\n    style: styles.space\n  }), React.createElement(Button, {\n    style: styles.button,\n    buttonStyle: {\n      backgroundColor: checkMailroom(date2, both)[0]\n    },\n    title: \"Mailroom\",\n    onPress: function onPress() {\n      return alert(checkMailroom(date2, both)[1]);\n    }\n  }), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\n\nvar Tab = createMaterialBottomTabNavigator();\n\nfunction MyTabs() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Food\",\n    barStyle: {\n      backgroundColor: '#821426'\n    },\n    activeColor: \"#fff\",\n    labelStyle: {\n      fontSize: 12\n    },\n    style: {\n      backgroundColor: 'tomato'\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Food\",\n    component: Food,\n    options: {\n      tabBarLabel: 'Food',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"food\",\n          color: 'grey',\n          size: 26\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Student Life\",\n    component: Student,\n    options: {\n      tabBarLabel: 'Student Life',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"school\",\n          color: 'grey',\n          size: 26\n        });\n      }\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Health\",\n    component: Health,\n    options: {\n      tabBarLabel: 'Health',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"heart\",\n          color: 'grey',\n          size: 26\n        });\n      }\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, null, React.createElement(MyTabs, null));\n}","map":{"version":3,"sources":["C:/Users/PC2/Hackathonpc4/App.js"],"names":["StatusBar","React","Button","NavigationContainer","createBottomTabNavigator","createMaterialBottomTabNavigator","MaterialCommunityIcons","checkDHall","checkGQ","checkLSC","checkHealthCenter","checkBusOff","checkMailroom","styles","moment","date","utcOffset","format","hour","Date","getHours","min","getMinutes","both","date2","day","Food","container","realTitle","space","button","backgroundColor","alert","Health","Student","Tab","MyTabs","fontSize","tabBarLabel","tabBarIcon","color","App"],"mappings":"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","sourcesContent":["//Imports\nimport { StatusBar } from 'expo-status-bar';\n//import React, { Component } from 'react';\nimport * as React from 'react';\nimport { StyleSheet, Text, View, Alert} from 'react-native';\nimport { Button } from \"react-native-elements\"\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/native' ;\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport checkDHall from './commands/checkDHall';\nimport checkGQ from './commands/checkGQ';\nimport checkLSC from './commands/checkLSC';\nimport checkHealthCenter from './commands/checkHealthCenter';\nimport checkBusOff from './commands/checkBusOff';\nimport checkMailroom from './commands/checkMailroom';\n\n\n\nimport styles from './styles/Component.style.js';\n\nimport moment from 'moment';\n\nvar date = moment().utcOffset('-05:00').format('YYYY-MM-DD'); //hh:mm:ss a');\nvar hour = new Date().getHours();\nvar min = new Date().getMinutes();\nvar both = hour + (min / 100);\n\nvar date2 = moment().day();\n\nfunction Food() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.realTitle}>MuhlenTime</Text>\n\n      <View style={styles.space} />\n\n      <Text>Today's date: {date}</Text>\n\n      <View style={styles.space} />\n\n      <Button\n      style={styles.button}\n       buttonStyle={{backgroundColor: checkDHall(date2, both)[0]}}  //change color red\n       title=\"Dining Hall\" \n       onPress={() => alert(checkDHall(date2, both)[1])}\n       />\n\n       <View style={styles.space} />\n\n       <Button\n       style={styles.button}\n       buttonStyle={{backgroundColor: checkGQ(date2, both)[0]}}\n       title=\"GQ\" \n       onPress={() => alert(checkGQ(date2, both)[1])} \n       />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nfunction Health() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.realTitle}>MuhlenTime</Text>\n\n      <View style={styles.space} />\n\n      <Text>Today's date: {date}</Text>\n\n      <View style={styles.space} />\n\n      <Button\n      style={styles.button}\n       buttonStyle={{backgroundColor: checkHealthCenter(date2, both)[0]}}\n       title=\"Health Center\" \n       onPress={() => alert(checkHealthCenter(date2, both)[1])}\n       />\n\n      <View style={styles.space} />\n\n       <Button\n       style={styles.button}\n       buttonStyle={{backgroundColor: checkLSC(date2, both)[0]}}\n       title=\"LSC\" \n       onPress={() => alert(checkLSC(date2, both)[1])} \n       />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n    /*<View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Health!</Text>\n    </View>*/\n}\n\nfunction Student() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.realTitle}>MuhlenTime</Text>\n\n      <View style={styles.space} />\n\n      <Text>Today's date: {date}</Text>\n\n      <View style={styles.space} />\n\n      <Button\n       style={styles.button}\n       buttonStyle={{backgroundColor: checkBusOff(date2,both)[0]}}\n       title=\"Business Office\" \n       onPress={() => alert(checkBusOff(date2,both)[1])}\n       /> \n\n       <View style={styles.space} />\n\n       <Button\n       style={styles.button}\n       buttonStyle={{backgroundColor: checkMailroom(date2, both)[0]}}\n       title=\"Mailroom\" \n       onPress={() => alert(checkMailroom(date2, both)[1])} \n       />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst Tab = createMaterialBottomTabNavigator();\n\nfunction MyTabs() {\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Food\"\n      barStyle = {{backgroundColor: '#821426'}}\n      activeColor=\"#fff\" // Color of the tab when it is clicked\n      labelStyle={{ fontSize: 12 }}\n      style={{ backgroundColor: 'tomato' }}\n    >\n      <Tab.Screen\n        name=\"Food\"\n        component={Food}\n        options={{\n          tabBarLabel: 'Food',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"food\" color={'grey'} size={26} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Student Life\"\n        component={Student}\n        options={{\n          tabBarLabel: 'Student Life',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"school\" color={'grey'} size={26} />\n          ),\n        }}\n      />\n      <Tab.Screen\n        name=\"Health\"\n        component={Health}\n        options={{\n          tabBarLabel: 'Health',\n          tabBarIcon: ({ color }) => (\n            <MaterialCommunityIcons name=\"heart\" color={'grey'} size={26} />\n          ),\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyTabs />\n    </NavigationContainer>\n  );\n}\n\n/*\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Text>{date}</Text>\n      <Text style={styles.title}>Yo</Text>\n\n      <Button\n       color=\"#20232a\"\n       title=\"Click Me\" \n       onPress={() => alert('Button pressed')}\n       />\n\n      <StatusBar style=\"auto\" />\n    </View>\n    \n  ); \n}\n*/\n"]},"metadata":{},"sourceType":"module"}